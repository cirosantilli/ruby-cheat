%h1 Haml
%p p
%p ul:
%ul
  %li a
  %li b
%p a
%p Multiline:
%p
  a
  b
No tag
- if true
  %p true
- else
  %p false
%h2 #Attributes
%div{a: "b" + "0", c:"d"} a b
%div(a: b c: d) a b
%p
  Class and id have special forms.
  Div is default tag if id or class are given.
.class0 inside div
.class.with.spaces inside div
#id0 id0
#id1.class1{a: "b"} id1 class1 a=b
.class2#id2{a: "b"} id1 class1 a=b
%p Non special syntax attributes must come last:
%div{a: "b"}.class1#id1-fail id1 class1
%h2 #Ruby code
%p= "a"
%p Multiline:
%p
  = "a"
  = "b"
%p
  Mix code and HTML:
  = 'code'
%p Single line / inline code + HTML: #{'code'}
%h3 #html_safe #!
%p
  The html_safe behaviour of = depends on the
  %code escape_html
  option. By default, it is off, and strings are left alone, and thus remain
  %code html_safe
  = '<>'
%p
  %code &=
  always escapes:
  &= '<i>a</i>'
%p
  %code !=
  never escapes:
  != '<i>a</i>'
%p
  %code !
  can be used before strings to prevent escaping the interpolations in the line:
  ! a #{'<i>b</i>'}
  By default, interpolation does get escaped, unlike
  %code =
  insertion which does not.
%h2 Inline tags
%p
  %a{href: "http://stackoverflow.com/questions/3784047/inline-tag-in-haml"}
    It does not seem possible to have inline tags / tags on the same line as other tags
%p
  = succeed '.' do
    %a{href: "http://stackoverflow.com/questions/1311428/haml-control-whitespace-around-text"} Tag without whitespace afterwards
  Horrible but works possible.
-# comment
%h2 #Spaces
%p &gt;: remove outer space from tag.
%div a
%div>
  b
  %div c
%div d
%div>
%h2 #Filters
%p CoffeeScript:
:coffeescript
  # TODO why does document.write make the page hang only when coming from a link,
  # not when refreshing the page?? Same for Javascript.
  #document.write '#{'<p>:coffeescript</p>'}'
%p Javascript:
:javascript
  //document.write('a')
